# Generated by Django 5.1.7 on 2025-07-01 03:44

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mcs', '0010_alter_individualuserfixedsavings_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GoatFarmingPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Package name (e.g., Basic Package)', max_length=100)),
                ('description', models.TextField(help_text='Package description and benefits')),
                ('investment_amount', models.DecimalField(decimal_places=2, help_text='Total investment amount', max_digits=12)),
                ('number_of_female_goats', models.PositiveIntegerField(help_text='Number of female goats included')),
                ('number_of_male_goats', models.PositiveIntegerField(default=0, help_text='Number of male goats included')),
                ('expected_returns', models.PositiveIntegerField(help_text='Expected number of goats after breeding period')),
                ('breeding_period_months', models.PositiveIntegerField(default=6, help_text='Expected breeding period in months')),
                ('management_fee', models.DecimalField(decimal_places=2, help_text='Annual management fee', max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Goat Farming Package',
                'verbose_name_plural': 'Goat Farming Packages',
                'ordering': ['investment_amount'],
            },
        ),
        migrations.CreateModel(
            name='ManagementFeeTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier_name', models.CharField(help_text='Tier name (e.g., Tier 1, Tier 2)', max_length=50)),
                ('min_goats', models.PositiveIntegerField(help_text='Minimum number of goats for this tier')),
                ('max_goats', models.PositiveIntegerField(blank=True, help_text='Maximum number of goats for this tier (null for unlimited)', null=True)),
                ('annual_fee', models.DecimalField(decimal_places=2, help_text='Annual management fee', max_digits=12)),
                ('description', models.TextField(blank=True, help_text='Tier description and benefits', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Management Fee Tier',
                'verbose_name_plural': 'Management Fee Tiers',
                'ordering': ['min_goats'],
            },
        ),
        migrations.CreateModel(
            name='GoatFarmingInvestment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investment_amount', models.DecimalField(decimal_places=2, help_text='Amount invested', max_digits=12)),
                ('start_date', models.DateField(default=datetime.date.today, help_text='Investment start date')),
                ('expected_completion_date', models.DateField(help_text='Expected completion date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('total_goats_received', models.PositiveIntegerField(default=0, help_text='Total goats received so far')),
                ('total_goats_expected', models.PositiveIntegerField(help_text='Total goats expected at completion')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goat_investments', to='mcs.userprofile')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='mcs.goatfarmingpackage')),
            ],
            options={
                'verbose_name': 'Goat Farming Investment',
                'verbose_name_plural': 'Goat Farming Investments',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Goat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goat_id', models.CharField(help_text='Unique goat identifier', max_length=20, unique=True)),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male')], max_length=10)),
                ('breed', models.CharField(help_text='Goat breed', max_length=50)),
                ('date_received', models.DateField(default=datetime.date.today, help_text='Date goat was received')),
                ('health_status', models.CharField(choices=[('healthy', 'Healthy'), ('under_observation', 'Under Observation'), ('sick', 'Sick'), ('recovered', 'Recovered')], default='healthy', max_length=20)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Current weight in kg', max_digits=5, null=True)),
                ('age_months', models.PositiveIntegerField(blank=True, help_text='Age in months', null=True)),
                ('is_pregnant', models.BooleanField(default=False, help_text='Whether the goat is pregnant')),
                ('expected_delivery_date', models.DateField(blank=True, help_text='Expected delivery date if pregnant', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('investment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goats', to='mcs.goatfarminginvestment')),
            ],
            options={
                'verbose_name': 'Goat',
                'verbose_name_plural': 'Goats',
                'ordering': ['goat_id'],
            },
        ),
        migrations.CreateModel(
            name='GoatFarmingNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('health_alert', 'Health Alert'), ('breeding_reminder', 'Breeding Reminder'), ('delivery_expected', 'Delivery Expected'), ('payment_due', 'Payment Due'), ('investment_update', 'Investment Update'), ('general', 'General')], max_length=20)),
                ('title', models.CharField(help_text='Notification title', max_length=200)),
                ('message', models.TextField(help_text='Notification message')),
                ('is_read', models.BooleanField(default=False, help_text='Whether the notification has been read')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_goat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='mcs.goat')),
                ('related_investment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='mcs.goatfarminginvestment')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goat_notifications', to='mcs.userprofile')),
            ],
            options={
                'verbose_name': 'Goat Farming Notification',
                'verbose_name_plural': 'Goat Farming Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoatFarmingTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('investment', 'Investment'), ('payment', 'Payment'), ('management_fee', 'Management Fee'), ('veterinary_cost', 'Veterinary Cost'), ('feed_cost', 'Feed Cost'), ('other_expense', 'Other Expense'), ('returns', 'Returns')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField(help_text='Transaction description')),
                ('reference_number', models.CharField(blank=True, help_text='Payment reference number', max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('due_date', models.DateField(blank=True, help_text='Due date for pending payments', null=True)),
                ('processed_date', models.DateTimeField(blank=True, help_text='Date when transaction was processed', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('investment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='mcs.goatfarminginvestment')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_goat_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goat Farming Transaction',
                'verbose_name_plural': 'Goat Farming Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoatHealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('health_status', models.CharField(choices=[('healthy', 'Healthy'), ('under_observation', 'Under Observation'), ('sick', 'Sick'), ('recovered', 'Recovered')], max_length=20)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('symptoms', models.TextField(blank=True, help_text='Any symptoms observed', null=True)),
                ('treatment', models.TextField(blank=True, help_text='Treatment provided', null=True)),
                ('veterinarian', models.CharField(blank=True, help_text='Veterinarian name', max_length=100, null=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0, help_text='Treatment cost', max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('goat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='mcs.goat')),
            ],
            options={
                'verbose_name': 'Goat Health Record',
                'verbose_name_plural': 'Goat Health Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GoatOffspring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offspring_id', models.CharField(help_text='Unique offspring identifier', max_length=20, unique=True)),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male')], max_length=10)),
                ('birth_date', models.DateField(help_text='Date of birth')),
                ('weight_at_birth', models.DecimalField(blank=True, decimal_places=2, help_text='Weight at birth in kg', max_digits=4, null=True)),
                ('is_alive', models.BooleanField(default=True, help_text='Whether the offspring is alive')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('father', models.ForeignKey(blank=True, limit_choices_to={'gender': 'male'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sired_offspring', to='mcs.goat')),
                ('mother', models.ForeignKey(limit_choices_to={'gender': 'female'}, on_delete=django.db.models.deletion.CASCADE, related_name='offspring', to='mcs.goat')),
            ],
            options={
                'verbose_name': 'Goat Offspring',
                'verbose_name_plural': 'Goat Offspring',
                'ordering': ['-birth_date'],
            },
        ),
    ]
